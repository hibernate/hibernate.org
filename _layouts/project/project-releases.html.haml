---
layout: project-standard
project_buttons_partial: project/releases-buttons.html.haml
---
-# Defines the project releases page template
-# Provide get started and download action buttons
-# List releases defined in the project metadata

-# subpages must define a section whose anchor is "supported-version"

-# Metadata from site.yml for the project
- project_description = site.projects[page.project]

.ui.icon.message
  %i.icon.doctor
  .content
    .header
      Interested in commercial support?
    %p
      Check out
      %a{:href => "/#{page.project}/support/"} Red Hat's offering
      \.

%h2 Series
- active_series = project_description.active_release_series
- unless active_series.nil? || active_series.empty?
  .ui.doubling.series.active-series.stackable
    - active_series.each do |series|
      - release = series.releases[0]
      .column
        .ui.raised.segment.version
          = partial( 'project/series-status-label.html.haml', { "series" => series, "classes" => "right ribbon", "tooltipPosition" => "left center" } )
          %div.description
            %h3.ui.header
              = series.version
              %small
                = release.date
            %p
              :asciidoc
                :doctype: inline
                #{series.summary.strip}
            .ui.right.aligned.basic.segment
              %a.ui.right.labeled.icon.button.primary{:href => "./#{series.version}/"}
                %i.right.arrow.icon
                More info
- else
  %p There are no active series for this project.

- older_series = project_description.older_release_series
- unless older_series.nil? || older_series.empty?
  %p
    %a.ui.button.right.labeled.icon#older-series-button(href="javascript: void(0)")
      %i.icon.snowflake
      %span See older series
  :javascript
    $(document).ready(function() {
      $('#older-series-button').click(function() {
        $('#older-series').slideToggle(400, function() {
        });
        var buttonText = $('#older-series-button span');
        buttonText.text() == 'See older series' ?
          buttonText.text("Hide older series") :
          buttonText.text("See older series");
      });
    });

  #older-series
    %h2 Older series
    .ui.doubling.series.older-series.stackable
      - older_series.each do |series|
        - release = series.releases[0]
        .column
          .ui.raised.segment.version
            = partial( 'project/series-status-label.html.haml', { "series" => series, "classes" => "right ribbon", "tooltipPosition" => "left center" } )
            %div.description
              %h3.ui.header
                = series.version
                %small
                  = release.date
              %p
                :asciidoc
                  :doctype: inline
                  #{series.summary.strip}
              .ui.right.aligned.basic.segment
                %a.ui.right.labeled.icon.button.primary{:href => "./#{series.version}/"}
                  %i.right.arrow.icon
                  More info

- unless project_description.integrations.nil?
  %h2#compatibility-matrix Compatibility matrix
  %table.ui.definition.table.unstackable.celled.striped.center.aligned
    %thead
      %tr
        %th
        %th.text-center{:colspan => project_description.active_release_series.size}
          = project_description.name
      %tr
        %th
        - project_description.active_release_series.each do |series|
          %th
            = series.version
    %tbody
      - project_description.integrations.each_pair do |integration_id, integration|
        - has_constraint = false
        - project_description.active_release_series.each do |series|
          - if series.integration_constraints[integration_id]
            - has_constraint = true
        - if has_constraint
          %tr
            %td.left.aligned
              %a{:href => "#{integration['url']}"}
                = integration["name"]
              - project_description.active_release_series.each do |series|
                - constraint = series.integration_constraints[integration_id]
                - if constraint == nil
                  %td.disabled
                    N/A
                - else
                  %td
                    :asciidoc
                      :doctype: inline
                      #{constraint.version}
  %p
    See also the
    %a{:href => "/community/compatibility-policy"}
      Compatibility policy
    and
    %a{:href => "/community/maintenance-policy"}
      Maintenance policy.

~ content
