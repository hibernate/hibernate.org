---
layout: project-standard
project_banner_partial: project/banner-series.html.haml
project_hero_partial: project/hero-series.html.haml
---
-# Defines the project series page template
-# Provides info about a particular series
-# List releases defined for the given series

-# Metadata from site.yml for the project
- project_description = site.projects[page.project]
- series = project_description.release_series[page.series_version]
- latest_release = series.releases.first

- latest_release_maven = maven(project_description, series, latest_release)

- getting_started_guide = getting_started_guide(project_description, series)
- migration_guide = migration_guide(project_description, series)
- dist_sourceforge = dist_sourceforge(project_description, series, latest_release)

-# The TOC is just for convenience but too large for mobile
#toc.mobile.hidden
  #toctitle
    Quick links
  %ul
    - unless series.integration_constraints.nil? || series.integration_constraints.empty?
      %li
        %a.item(href="#compatibility")
          Compatibility
    %li
      %a.item{:href => "#documentation"}
        Documentation
    %li
      %a.item{:href => "#get-it"}
        How to get it
    - if not getting_started_guide.nil?
      %li
        %a.item{:href => "#getting_started"}
          Getting started
    - if not migration_guide.nil?
      %li
        %a.item{:href => "#migrate"}
          Migrating
    %li
      %a.item{:href => "#whats-new"}
        What's new
    - if latest_release_maven.coord && !series.endoflife
      %li
        %a.item{:href => "#snapshots"}
          Development versions (SNAPSHOTS)
    %li
      %a.item{:href => "#releases"}
        Releases in this series

- if series.status == 'endoflife'
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [WARNING]
    ====
    {projectName} {version} has reached its end-of-life:

    * it is unlikely to see another release;
    * bugs are unlikely to get fixed in this version, even security vulnerabilities;
    * pull requests against this version will be rejected;
    * bug reproducers using this version will be given lower priority.

    We recommend that you upgrade to a newer series if possible.

    See also the link:/community/maintenance-policy[Maintenance policy].
    ====
- elsif series.status == 'limited-support'
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [WARNING]
    ====
    {projectName} {version} is in limited support mode:

    * releases may be delayed until a significant need arises;
    * bugs will only be fixed if they are considered significant enough or in the context of paid support;
    * pull requests against this version might be rejected for bugs that are not considered critical enough;
    * bug reproducers using this version will be given lower priority.

    We recommend that you upgrade to a newer series if possible or look for link:../../support[paid support].

    See also the link:/community/maintenance-policy[Maintenance policy].
    ====

- unless series.integration_constraints.nil? || series.integration_constraints.empty?
  %h2{:id => "compatibility"} Compatibility
  %table.ui.collapsing.table.striped.celled.unstackable
    - series.integration_constraints.each_pair do |integration_id,constraint|
      - integration = project_description.integrations[integration_id]
      %tr
        %td
          %a{:href => "#{integration.url}"}
            = integration["name"]
        %td
          :asciidoc
            :doctype: inline
            #{constraint.version}
  %p
    Not compatible with your requirements? Have a look at the
    %a{:href => "../"}
      other series.
  %p
    See also the
    %a{:href => "/community/compatibility-policy"}
      Compatibility policy
    and
    %a{:href => "/community/maintenance-policy"}
      Maintenance policy.

%h2{:id => "documentation"} Documentation
%p
  Documentation for #{project_description.name} #{series.version} can be accessed through the links below:
%p
  - reference_doc = reference_doc(project_description, series)
  %a.ui.right.labeled.icon.button(href="#{reference_doc.html_url}")
    %i.icon.file.text.outline
    HTML
  - if not reference_doc.pdf_url.nil?
    %a.ui.right.labeled.icon.button(href="#{reference_doc.pdf_url}")
      %i.icon.file.pdf.outline
      PDF
  - javadoc = javadoc(project_description, series)
  %a.ui.right.labeled.icon.button(href="#{javadoc.html_url}")
    %i.icon.code.outline
    API (JavaDoc)

%p
  You can find more documentation for all series on the
  %a{:href => '../../documentation'}
    documentation page.

%h2{:id => "get-it"} How to get it
- if series.status == 'end-of-life'
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [WARNING]
    ====
    {projectName} {version} has reached its end-of-life: we recommend that you upgrade to a newer series if possible.

    See also the link:/community/maintenance-policy[Maintenance policy].
    ====
- elsif series.status == 'limited-support'
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [WARNING]
    ====
    {projectName} {version} is in limited maintenance mode: we recommend that you upgrade to a newer series if possible or look for link:../../support[paid support].

    See also the link:/community/maintenance-policy[Maintenance policy].
    ====
.ui.grid.equal.height.stackable.download-options
  .row
    - if latest_release_maven.coord
      - releases_repo = latest_release_maven.repo[:releases]
      .eleven.wide.column
        %h3 Maven, Gradle...
        %p
          Maven artifacts of #{project_description.name} are published to
          %a{:href => releases_repo.data.web_ui_url}
            #{releases_repo.data.name}.
          Most build tools fetch artifacts from Maven Central by default,
          but if that's not the case for you,
          see
          %a{:href => releases_repo.data.help_setup_url}
            this page
          to configure your build tool.
        %p
          You can find the Maven coordinates of all artifacts through the link below:
          %p
            %a.ui.right.labeled.button.small.icon{:href => releases_repo.web_ui_all_artifacts_url(latest_release_maven.coord, latest_release.version)}
              %i.icon.cloud.cubes
              Maven artifacts
        - if latest_release_maven.artifacts
          %p
            Below are the Maven coordinates of the main artifacts.
          %div.ui.relaxed.divided.list
            - latest_release_maven.artifacts.each do |artifact|
              - group_id = latest_release_maven.coord.group_id
              - artifact_id = artifact.artifact_id
              - version = latest_release.version
              %div.item
                %div.right.floated.content
                  %a.ui.button.tiny.icon{:href => releases_repo.web_ui_artifact_url(group_id, artifact_id, latest_release.version)}
                    %i.icon.cloud.cube
                %div.header
                  <span class="faded">#{group_id}:</span>#{artifact_id}</strong><span class="faded">:#{version}</span>
                %div.content
                  %div.description
                    :asciidoc
                      :doctype: inline
                      #{(artifact[:summary] || artifact.artifact_id).strip}
        - if latest_release_maven&.signing&.since
          %p
            All Maven artifacts of this project released after #{latest_release_maven.signing.since} are signed.
          %p
            To verify signed Maven artifacts, head to
            %a{:href => "/community/keys/"}
              this page.
    - if dist_sourceforge || latest_release_maven.coord
      .five.wide.column.divided
        %h3 Direct download
        - if dist_sourceforge
          %p
            A ZIP archive containing all JAR files, documentation and source is available from SourceForge:
            %p
              %a.ui.right.labeled.button.small.icon{:href => dist_sourceforge.zip_url, :title => "Download"}
                %i.icon.cloud.download
                Download ZIP archive
        - if latest_release_maven.coord
          - releases_repo = latest_release_maven.repo[:releases]
          %p
            Individual Maven artifacts may be downloaded directly from the Maven repository:
            %p
              %a.ui.right.labeled.button.small.icon{:href => releases_repo.direct_download_url(latest_release_maven.coord)}
                %i.icon.folder.open
                #{releases_repo.data.name} subdirectory
            %p
              See
              %a{:href => "https://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-project-dependencies.html"}
                here
              for how to download all dependencies of your Maven project to a local directory on your filesystem.
            %p
              See
              %a{:href => "https://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-artifacts.html"}
                here
              for how to download an explicitly listed set of artifacts to a local directory on your filesystem.

%p
  More information about specific releases (announcements, download links) can be found
  %a{:href => "#releases"}
    here.

- if not getting_started_guide.nil?
  %h2{:id => "getting_started"} Getting started
  - if series.status == 'end-of-life'
    :asciidoc
      :projectName: #{project_description.name}
      :version: #{series.version}
      [WARNING]
      ====
      {projectName} {version} has reached its end-of-life: we recommend that you upgrade to a newer series if possible.

      See also the link:/community/maintenance-policy[Maintenance policy].
      ====
  - elsif series.status == 'limited-support'
    :asciidoc
      :projectName: #{project_description.name}
      :version: #{series.version}
      [WARNING]
      ====
      {projectName} {version} is in limited maintenance mode: we recommend that you upgrade to a newer series if possible or look for link:../../support[paid support].

      See also the link:/community/maintenance-policy[Maintenance policy].
      ====
  %p
    If you want to start using #{project_description.name} #{series.version}, please refer to the getting started guide:
  %p
    - if not getting_started_guide.html_url.nil?
      %a.ui.right.labeled.icon.button.small(href="#{getting_started_guide.html_url}")
        %i.icon.file.text.outline
        HTML
    - if not getting_started_guide.pdf_url.nil?
      %a.ui.right.labeled.icon.button.small(href="#{getting_started_guide.pdf_url}")
        %i.icon.file.pdf.outline
        PDF

- if not migration_guide.nil?
  %h2{:id => "migrate"} Migrating
  %p
    If you need to upgrade from a previous series, please refer to the migration guide:
  %p
    - if not migration_guide.html_url.nil?
      %a.ui.right.labeled.icon.button.small(href="#{migration_guide.html_url}")
        %i.icon.file.text.outline
        HTML
    - if not migration_guide.pdf_url.nil?
      %a.ui.right.labeled.icon.button.small(href="#{migration_guide.pdf_url}")
        %i.icon.file.pdf.outline
        PDF

%h2{:id => "whats-new"} What's new

- if ! latest_release.stable
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [NOTE]
    ====
    {projectName} {version} is still in development:

    * some features may be incomplete;
    * newly introduced features may change in a backward-incompatible way before the stable release.

    We encourage you to link:#get-it[give it a try] and to link:/community/[let us know]
    of any bugs or problems you encounter.
    ====

- if latest_release[:announcement_url]
  %p
    Latest release announcement (#{latest_release.date}):
    %a{:href => "#{latest_release.announcement_url}"}
      #{latest_release.version}.

%p
  A detailed list of new features, improvements and fixes in this series can be found
  - if project_description[:jira][:key]
    %a{:href => jira_issues_for_series_url(project_description, series)}
      on our issue tracker.
  - else
    %a{:href => github_issues_url(project_description)}
      on our issue tracker.

~ content

- if latest_release_maven.repo[:snapshots] && !series.endoflife
  - snapshots_repo = latest_release_maven.repo[:snapshots]
  %h2{:id => "snapshots"} Development versions (SNAPSHOTS)
  %p
    The latest development versions of Maven artifacts for #{project_description.name}
    are published to the
    %a{:href => snapshots_repo.data.web_ui_url}
      #{snapshots_repo.data.name}
    repository.
  %p
    %a.ui.right.labeled.button.small.icon{:href => snapshots_repo.direct_download_url(latest_release_maven.coord)}
      %i.icon.folder.open
      #{snapshots_repo.data.name} subdirectory
  %p
    You should only need those (unstable) versions for testing recently merged patches,
    and should never use them in production.
  %p
    To consume these artifacts, you may need to configure your build tool to fetch artifacts
    from
    %code= snapshots_repo.data.direct_download_url(latest_release_maven.coord)
    and to enable snapshots:
  %p
    %a.ui.right.labeled.button.small.icon{:href => "https://maven.apache.org/settings.html#repositories"}
      %i.icon.external.alternate
      Maven
    %a.ui.right.labeled.button.small.icon{:href => "https://docs.gradle.org/current/userguide/declaring_repositories.html#maven_repository_filtering"}
      %i.icon.external.alternate
      Gradle

%h2{:id => "releases"} Releases in this series
- if series.status == 'end-of-life'
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [WARNING]
    ====
    {projectName} {version} has reached its end-of-life: we recommend that you upgrade to a newer series if possible.

    See also the link:/community/maintenance-policy[Maintenance policy].
    ====
- elsif series.status == 'limited-support'
  :asciidoc
    :projectName: #{project_description.name}
    :version: #{series.version}
    [WARNING]
    ====
    {projectName} {version} is in limited maintenance mode: we recommend that you upgrade to a newer series if possible or look for link:../../support[paid support].

    See also the link:/community/maintenance-policy[Maintenance policy].
    ====
- unless series.nil?
  .ui.stackable.grid.series-versions
    - series.releases.each do |release|
      - dist_sourceforge = dist_sourceforge(project_description, series, release)
      - version = release.version
      - available = release[:available] == nil || release[:available]
      .ui.row
        .three.wide.column
          %p
            - if series.status == 'end-of-life'
              %span.ui.label.version.red
                %span{:data => {:tooltip => "#{project_description.name} #{series.version} has reached its end-of-life: \nwe recommend that you upgrade to a newer series if possible, \nbecause we are unlikely to fix bugs or provide new releases for this series.", :position => "right center"}}
                  = version
            - elsif !release.stable
              %span.ui.label.version.orange
                %span{:data => {:tooltip => "This is a development release: be prepared for changes.", :position => "right center"}}
                  = version
            - elsif series.status == 'limited-support'
              %span.ui.label.version.yellow
                %span{:data => {:tooltip => "#{project_description.name} #{series.version} is in limited support mode: \nwe recommend that you upgrade to a newer series if possible \nor look for paid support, because we will not always fix bugs \nor provide timely releases for this series.\nDownstream frameworks or commercial offerings (e.g. Red Hat's) \nmay provide stronger guarantees.", :position => "right center"}}
                  = version
            - else
              %span.ui.label.version.green
                = version
          %p
            %small.ui.label= release.date
          %p
            %small.ui.label
              %a{:href => "#{release.license.url}"}= release.license.name
        .thirteen.wide.column
          - if release[:summary]
            %p
              :asciidoc
                :doctype: inline
                #{release.summary.strip}
          - if available && latest_release.version == version
            %p
              %a.ui.small.right.labeled.icon.button{:href => '#get-it'}
                %i.level.up.alternate.icon
                How to get it
              - if not getting_started_guide.nil?
                %a.ui.small.right.labeled.icon.button{:href => '#getting_started'}
                  %i.level.up.alternate.icon
                  Getting started
          %p
            - if available
              - release_maven = maven(project_description, series, release)
              - if release_maven.coord
                - releases_repo = latest_release_maven.repo[:releases]
                %a.ui.small.right.labeled.button.icon{:href => releases_repo.web_ui_all_artifacts_url(release_maven.coord, version)}
                  %i.icon.cloud.cubes
                  Maven artifacts

              - if dist_sourceforge
                %a.ui.small.right.labeled.button.icon{:href => dist_sourceforge.zip_url}
                  %i.icon.cloud.download
                  Download

              - if project_description[:jira][:key]
                %a.ui.small.right.labeled.button.icon{:href => jira_issues_for_release_url(project_description, release)}
                  %i.icon.bug
                  Resolved issues

              - if release[:announcement_url]
                %a.ui.small.right.labeled.button.icon{:href => "#{release.announcement_url}"}
                  %i.icon.announcement
                  Release announcement
- else
  %p There are no releases configured for this series.
