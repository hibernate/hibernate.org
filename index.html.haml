---
layout: base
title: Hibernate. Everything data.
---

.jumbotron
  .ui.container
    .ui.grid.stackable
      .column.row{:style => "z-index: 1;"}
        .left.floated.column.eight.wide.middle.aligned
          %h1
            %span Hibernate
          %h2
            %span Everything data.
        .right.floated.column.five.wide.middle.aligned.print.hidden
          #project-news{:style => 'display:none'}
.page-title.home
  .ui.container
    %h1 More than an ORM, discover the Hibernate galaxy.
.ui.container.content#content
  .projects
    .ui.three.column.doubling.grid.stackable
      .column
        .ui.raised.segment.orm
          .project
            %h3.ui.header
              %a{:href => relative("/orm/")} Hibernate ORM
            %p
              %i.big.icon.database
              Domain model persistence for relational databases.
            .ui.right.aligned.basic.segment
              %a.ui.button.right.labeled.icon.a.primary{:href => relative("/orm/")}
                %i.right.arrow.icon
                More
      .column
        .ui.raised.segment.search
          .project
            %h3.ui.header
              %a{:href => relative("/search/")} Hibernate Search
            %p
              %i.big.icon.search
              Full-text search for your domain model.
            .ui.right.aligned.basic.segment
              %a.button.ui.right.labeled.icon.a.primary{:href => relative("/search/")}
                %i.right.arrow.icon
                More
      .column
        .ui.raised.segment.validator
          .project
            %h3.ui.header
              %a{:href => relative("/validator/")} Hibernate Validator
            %p
              %i.big.icon.checkmark.box
              Annotation based constraints for your domain model.
            .ui.right.aligned.basic.segment
              %a.ui.button.right.labeled.icon.a.primary{:href => relative("/validator/")}
                %i.right.arrow.icon
                More
      .column
        .ui.raised.segment.tools
          .project
            %h3.ui.header
              %a{:href => relative("/reactive/")} Hibernate Reactive
            %p
              %i.big.icon.retweet
              Reactive domain model persistence for relational databases.
            .ui.right.aligned.basic.segment
              %a.ui.button.right.labeled.icon.a.primary{:href => relative("/reactive/")}
                %i.right.arrow.icon
                More
      .column
        .ui.raised.segment.tools
          .project
            %h3.ui.header
              %a{:href => relative("/tools/")} Hibernate Tools
            %p
              %i.big.icon.wrench
              Command line tools and IDE plugins for your Hibernate usages.
            .ui.right.aligned.basic.segment
              %a.ui.button.right.labeled.icon.a.primary{:href => relative("/tools/")}
                %i.right.arrow.icon
                More
      .column
        .ui.raised.segment.tools
          .project
            %h3.ui.header
              %a{:href => relative("/others/")} Others
            %p
              %i.big.icon.retweet
              Other Hibernate related projects (e.g. Hibernate OGM, Hibernate Shards).
            .ui.right.aligned.basic.segment
              %a.ui.button.right.labeled.icon.a.primary{:href => relative("/others/")}
                %i.right.arrow.icon
                More
      .column

:javascript
  $(document).ready(function() {
    $('.project').matchHeight({ byRow: false });

    $.ajax({
      url: "#{site.news_feed_root_url}/global.json",
      jsonpCallback: "getBlogEntries",
      dataType: "jsonp",

      // Work with the response
      success: function( data ) {
        var projectNews = $('#project-news');
        var segment = $('<div class="ui raised segment" />');
        segment.append($('<h4>').text('Latest news'));
        var list = $('<div class="ui relaxed divided list" />');

        for (var i = 0; i < Math.min(data.length, 3); i++) {
          var entry = data[i];

          var ribbonText = 'Community';
          var ribbonIcon = 'users';
          if ( entry.tags ) {
            if ( entry.tags.includes('Newsletter') ) {
              ribbonText = 'Newsletter';
              ribbonIcon = 'newspaper';
            }
            else if ( entry.tags.includes('Interview') ) {
              ribbonText = 'Community';
              ribbonIcon = 'users';
            }
            else if ( entry.tags.includes('Hibernate ORM') ) {
              ribbonText = 'Hibernate ORM';
              ribbonIcon = 'database';
            }
            else if ( entry.tags.includes('Hibernate Search') ) {
              ribbonText = 'Hibernate Search';
              ribbonIcon = 'search';
            }
            else if ( entry.tags.includes('Hibernate OGM') ) {
              ribbonText = 'Hibernate OGM';
              ribbonIcon = 'database';
            }
            else if ( entry.tags.includes('Hibernate Validator') ) {
              ribbonText = 'Hibernate Validator';
              ribbonIcon = 'check';
            }
            else if ( entry.tags.includes('Hibernate Tools') ) {
              ribbonText = 'Tooling';
              ribbonIcon = 'wrench';
            }
            else if ( entry.tags.includes('Hibernate Reactive') ) {
              ribbonText = 'Hibernate Reactive';
              ribbonIcon = 'retweet';
            }
          }

          var entryItem = $('<div class="item news" />');
          var icon = $('<i class="large ' + ribbonIcon + ' middle aligned icon news-type" title="' + ribbonText + '" />');
          entryItem.append(icon);

          var content = $('<div class="middle aligned content" />');
          content.append($('<a class="header" href="' + entry.url + '" />').text(entry.title));
          entryItem.append(content);

          list.append(entryItem);
        }

        var moreButton = $('<a href="https://in.relation.to/" class="ui button right labeled icon a primary tiny" />');
        moreButton.text('More news');
        moreButton.append($('<i class="right arrow icon" />'));
        list.append($('<div class="item news more" />').append(moreButton));

        segment.append(list);
        projectNews.append(segment);
        projectNews.fadeIn();
      }
    });
  });

